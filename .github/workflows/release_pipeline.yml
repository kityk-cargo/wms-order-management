name: Release Pipeline

on:
  workflow_dispatch:  # manual trigger
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  release:
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Set build version tag
        id: tag
        run: |
          MAJOR=0
          MINOR=1
          BUILD=$(date +'%Y%m%d-%H%M')
          VERSION="${MAJOR}.${MINOR}.${BUILD}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          git tag ${VERSION}
          git push origin ${VERSION}

      - name: Build with Gradle
        run: ./gradlew clean bootJar

      - name: Generate OpenAPI specs
        run: |
          ./gradlew generateOpenApiDocs
          # Convert JSON to YAML
          npm install -g json2yaml
          json2yaml build/api-docs/openapi.json > openapi.yaml

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/wms-order-management:${{ env.VERSION }}
            ghcr.io/${{ github.repository }}/wms-order-management:latest

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          files: |
            build/libs/*.jar
            openapi.json
            openapi.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout wms-contracts repo
        uses: actions/checkout@v3
        with:
          repository: kityk-cargo/wms-contracts
          path: ./wms-contracts

      # Add steps to generate and publish Pact files
      - name: Run Pact tests
        run: ./gradlew pactVerify
        env:
          PACTFOLDER_PATH: ./wms-contracts/pact/rest/wms_order_management
          SPRING_PROFILES_ACTIVE: test,dbIntegrationTest
          LIQUIBASE_TEST_CLASSPATH: wms-main/liquibase
          TESTCONTAINERS_RYUK_DISABLED: "true"
          
      - name: Verify push token exists
        shell: bash
        env:
          CONTRACTS_PUSH_TOKEN: ${{ secrets.CONTRACTS_PUSH_TOKEN }}
        run: |
          if [ -z "$CONTRACTS_PUSH_TOKEN" ]; then
            echo "Error: CONTRACTS_PUSH_TOKEN not defined" >&2
            exit 1
          fi
          echo "Verified: CONTRACTS_PUSH_TOKEN exists"

      - name: Publish Pact files to contracts repo
        env:
          CONTRACTS_PUSH_TOKEN: ${{ secrets.CONTRACTS_PUSH_TOKEN }}
        run: |
          mkdir -p ./wms-contracts/pact/rest
          cp -r ./build/pacts-restructured/pacts/* ./wms-contracts/pact/rest/
          cd ./wms-contracts
          git add -f .
          if ! git diff-index --quiet HEAD --; then
            git config --global user.email "contract@updater.com"
            git config --global user.name "Fast Tests Angel"
            git commit -m "Update Order Management pact files"
            git config --unset-all http.https://github.com/.extraheader
            git push -f https://$CONTRACTS_PUSH_TOKEN@github.com/kityk-cargo/wms-contracts.git main
          else
            echo "No changes to publish"
          fi